{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAwCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAqBrC,OACI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GACV,MAAM,CAAEP,GAAR,mBAAuBO,OAG3BN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBV,EAAcU,EAAOF,a,+BCPhBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACL,mCACRC,EAFa,iDAEoCC,UAAWH,GAF/C,4BACL,oCADK,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCmBLO,EAjBK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAS7B,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCeAO,EA1BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAhB,GACHc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAGtB,CAACpB,IAGGqB,EDb2BI,CAAazB,GAAjCa,EAHgB,EAGtBN,KAAca,EAHQ,EAGRA,QAEtB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,eESxBe,EAzBI,WAAO,IAAD,EAIaxC,mBAAS,CAAC,iBAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAMvB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAELA,SAAUA,GADLA,Y,MCb3B2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29b8c177.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setinputValue(target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 0){\r\n            setCategories(categories => {\r\n                return [inputValue, ...categories];\r\n            });\r\n\r\n            setinputValue('');\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n       </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const api_key='xsospEYbrVrrMZRqJKTU93wRtWcsxdv3';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=5&api_key=${api_key}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log(\r\n    //     {\r\n    //         id, \r\n    //         title, \r\n    //         url\r\n    //     });\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    //custom hook. Load data. Rename \"data\" to \"images\".\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map((img) => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img} />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs( category )\r\n            .then( gifs =>{\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n\r\n    return state; //{data: [], loading: true}\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n\r\n    const [categories, setCategories] = useState(['Boca juniors']);\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => {\r\n                    return <GifGrid \r\n                      key={category}\r\n                      category={category} />\r\n                })  \r\n            }\r\n        </ol>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}